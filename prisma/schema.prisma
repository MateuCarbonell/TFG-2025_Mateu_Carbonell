// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  userType    String
  password    String
  services    Service[]
  reservations Reservation[]
  ratings     Rating[]
}

enum UserType {
  proveedor
  cliente
}

model Service {
  id            Int       @id @default(autoincrement())
  providerId    Int
  name          String
  description   String?
  price         Decimal
  available     Boolean   @default(true)
  provider      User      @relation(fields: [providerId], references: [id])
  reservations  Reservation[]
}

model Reservation {
  id           Int       @id @default(autoincrement())
  userId       Int
  serviceId    Int
  date         DateTime
  status       String    @default("pending")
  user         User      @relation(fields: [userId], references: [id])
  service      Service   @relation(fields: [serviceId], references: [id])
  payment      Payment?
  rating       Rating?
}

model Payment {
  id           Int       @id @default(autoincrement())
  reservationId Int      @unique
  amount       Decimal
  date         DateTime  @default(now())
  status       String    @default("pending")
  reservation  Reservation @relation(fields: [reservationId], references: [id])
}

model Rating {
  id           Int       @id @default(autoincrement())
  reservationId Int      @unique
  userId       Int
  rating       Int?
  comment      String?
  reservation  Reservation @relation(fields: [reservationId], references: [id])
  user         User       @relation(fields: [userId], references: [id])
}
